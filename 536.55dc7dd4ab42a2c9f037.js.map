{"version":3,"file":"536.55dc7dd4ab42a2c9f037.js","mappings":"AACAA,cAAc,gBAEdC,OAAOC,qBAAuBC,UAC5BC,KAAKC,YAAY,CAAEC,KAAM,iBAG3BF,KAAKG,UAAaC,IAChB,MAAM,GAAEC,EAAF,KAAMC,GAASF,EAAMG,KACrBC,EAAS,IAAIC,WAEnBD,EAAOE,iBAAiB,WAAW,KACjC,MAAMC,EAASH,EAAOI,OAEhBC,EAAOF,EAAOG,WACdC,EAAUlB,OAAOmB,QAAQH,GAC/BhB,OAAOoB,OAAOC,IAAI,IAAIC,WAAWR,GAASI,GAE1C,MAEMK,EAFUvB,OAAOwB,MAAM,UAAW,SAAU,CAAC,SAAU,UAEjDC,CAAQP,EAASF,GAE7B,IADkBhB,OAAO0B,SAASH,EAAK,OAOrC,OALAvB,OAAO2B,MAAMJ,GACbvB,OAAO2B,MAAMT,QACbf,KAAKC,YAAY,CACfC,KAAM,SAAUG,GAAAA,EAAIoB,MAAO,EAAGC,OAAQ,EAAGd,OAAQ,OAIrD,MAAMa,EAAQ5B,OAAO0B,SAASH,EAAM,EAAG,OACjCM,EAAS7B,OAAO0B,SAASH,EAAM,EAAG,OAExCvB,OAAO2B,MAAMJ,GAEb,MAEMO,EAFS9B,OAAOwB,MAAM,SAAU,SAAU,CAAC,SAAU,UAEzCO,CAAOb,EAASF,GAE5BgB,EAAa,IAAIV,WAAWtB,OAAOoB,OAAON,OAAQgB,EAAWF,EAAQC,EAAS,GAC9Ed,EAAS,IAAIkB,kBAAkBD,GACrChC,OAAO2B,MAAMG,GACb9B,OAAO2B,MAAMT,GAEbf,KAAKC,YAAY,CACfC,KAAM,SAAUG,GAAAA,EAAIoB,MAAAA,EAAOC,OAAAA,EAAQd,OAAAA,OAIvCJ,EAAOuB,kBAAkBzB","sources":["webpack://telegram-t/./src/lib/webp/webp_wasm.worker.js"],"sourcesContent":["/* eslint-disable */\nimportScripts('webp_wasm.js');\n\nModule.onRuntimeInitialized = async () => {\n  self.postMessage({ type: 'initialized' });\n};\n\nself.onmessage = (event) => {\n  const { id, blob } = event.data;\n  const reader = new FileReader();\n\n  reader.addEventListener('loadend', () => {\n    const buffer = reader.result;\n\n    const size = buffer.byteLength;\n    const thisPtr = Module._malloc(size);\n    Module.HEAPU8.set(new Uint8Array(buffer), thisPtr);\n\n    const getInfo = Module.cwrap('getInfo', 'number', ['number', 'number']);\n\n    const ptr = getInfo(thisPtr, size);\n    const success = !!Module.getValue(ptr, 'i32');\n    if (!success) {\n      Module._free(ptr);\n      Module._free(thisPtr);\n      self.postMessage({\n        type: 'result', id, width: 0, height: 0, result: null,\n      });\n      return;\n    }\n    const width = Module.getValue(ptr + 4, 'i32');\n    const height = Module.getValue(ptr + 8, 'i32');\n\n    Module._free(ptr);\n\n    const decode = Module.cwrap('decode', 'number', ['number', 'number']);\n\n    const resultPtr = decode(thisPtr, size);\n\n    const resultView = new Uint8Array(Module.HEAPU8.buffer, resultPtr, width * height * 4);\n    const result = new Uint8ClampedArray(resultView);\n    Module._free(resultPtr);\n    Module._free(thisPtr);\n\n    self.postMessage({\n      type: 'result', id, width, height, result,\n    });\n  });\n\n  reader.readAsArrayBuffer(blob);\n};\n"],"names":["importScripts","Module","onRuntimeInitialized","async","self","postMessage","type","onmessage","event","id","blob","data","reader","FileReader","addEventListener","buffer","result","size","byteLength","thisPtr","_malloc","HEAPU8","set","Uint8Array","ptr","cwrap","getInfo","getValue","_free","width","height","resultPtr","decode","resultView","Uint8ClampedArray","readAsArrayBuffer"],"sourceRoot":""}